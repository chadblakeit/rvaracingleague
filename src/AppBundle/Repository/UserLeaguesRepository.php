<?php

namespace AppBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * UserLeaguesRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserLeaguesRepository extends EntityRepository
{
    public function findAllMyActiveLeagues($fos_user)
    {
        $query = $this->getEntityManager()
            ->createQuery(
                'SELECT ul, l FROM AppBundle:UserLeagues ul
                 JOIN ul.league l
                 WHERE l.disabled = 0
                 AND ul.fos_user = :fos_user'
            )->setParameter('fos_user', $fos_user);

        try {
            return $query->getResult();
        } catch (\Doctrine\ORM\NoResultException $e) {
            return null;
        }
    }

    public function findMyActiveLeague($fos_user,$league)
    {
        $query = $this->getEntityManager()
            ->createQuery(
                'SELECT ul, l FROM AppBundle:UserLeagues ul
                 JOIN ul.league l
                 WHERE l.disabled = 0
                 AND ul.fos_user = :fos_user
                 AND ul.league = :league'
            )->setParameters(array('fos_user'=>$fos_user,'league'=>$league));

        try {
            return $query->getResult();
        } catch (\Doctrine\ORM\NoResultException $e) {
            return null;
        }
    }

    public function getUsersIDsNotInArray($ids,$league) {
        if (empty($ids)) {
            $query = $this->getEntityManager()
                ->createQuery(
                    'SELECT ul, u.email, u.firstname, u.lastname, u.username
                     FROM AppBundle:UserLeagues ul
                     JOIN AppBundle:User u
                     WHERE u = ul.fos_user
                     WHERE ul.league = :league'
                )->setParameters(array('league' => $league));
        } else {
            $query = $this->getEntityManager()
                ->createQuery(
                    'SELECT ul, u.email, u.firstname, u.lastname, u.username
                     FROM AppBundle:UserLeagues ul
                     JOIN AppBundle:User u
                     WHERE u = ul.fos_user
                     WHERE ul.league = :league
                     AND u.id NOT IN (:ids)'
                )->setParameters(array('league' => $league, 'ids' => $ids));
        }
        try {
            dump($query->getResult());
            return $query->getResult();
        } catch (\Doctrine\ORM\NoResultException $e) {
            return null;
        }
    }

    public function getUserInfoByLeague($league) {
        $query = $this->getEntityManager()
            ->createQuery(
                'SELECT u.id, u.firstname, u.lastname, u.username, u.email
                 FROM AppBundle:UserLeagues ul
                 JOIN AppBundle:User u
                 WHERE u = ul.fos_user
                 WHERE ul.league = :league'
            )->setParameter('league', $league);
        try {
            return $query->getResult();
        } catch (\Doctrine\ORM\NoResultException $e) {
            return null;
        }
    }

}
